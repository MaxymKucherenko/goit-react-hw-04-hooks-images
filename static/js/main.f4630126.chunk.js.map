{"version":3,"sources":["services/Api.js","components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Modal.js","App.js","index.js"],"names":["instance","axios","create","baseURL","search","q","page","get","Searchbar","useState","query","setQuery","className","onSubmit","event","preventDefault","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","toLowerCase","ImageGalleryItem","image","onClick","src","webformatURL","alt","tags","ImageGallery","images","map","id","LoadMoreButton","handleLoadMore","disabled","Modal","onClose","handleKeyDown","e","code","useEffect","window","addEventListener","removeEventListener","currentTarget","largeImageURL","App","setImages","showModal","setShowModal","setPage","loading","setLoading","imageId","setImageId","scroll","scrollTo","top","document","documentElement","scrollHeight","behavior","find","then","response","data","hits","color","height","width","timeout","length","prev","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4630126.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://pixabay.com/api',\r\n});\r\nconst IMAGES_PER_PAGE = 12;\r\nconst PIXABAY_KEY = '22740436-05bbd607dbbc32bdc3528cde5';\r\n\r\nexport const search = (q, page) => {\r\n  return instance.get(\r\n    `?q=${q}&page=${page}&key=${PIXABAY_KEY}&image_type=photo&orientation=horizontal&per_page=${IMAGES_PER_PAGE}`\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Searchbar = ({ search }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleQChange = ({ target }) => {\r\n    setQuery(target.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    search(query);\r\n    if (query.trim() === '') {\r\n      toast.error('Введите ключевое слово для поиска', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"on\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"searchText\"\r\n            value={query}\r\n            onChange={handleQChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <img\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          key={image.id}\r\n          onClick={onClick(image.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\n\r\nconst LoadMoreButton = ({ handleLoadMore, disabled }) => (\r\n  <button\r\n    type=\"button\"\r\n    className=\"Button\"\r\n    onClick={handleLoadMore}\r\n    disabled={disabled}\r\n  >\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default LoadMoreButton;\r\n","import React, { useEffect } from 'react';\r\n\r\nconst Modal = ({ image, onClose }) => {\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={image.largeImageURL} alt={image.tags} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { search } from './services/Api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport LoadMoreButton from './components/Button';\nimport Modal from './components/Modal';\nimport { ToastContainer } from 'react-toastify';\nimport './App';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [imageId, setImageId] = useState(null);\n\n  const handleQChange = (query) => {\n    if (!query) {\n      return;\n    }\n    setLoading(true);\n    search(query, 1).then((response) => {\n      setImages(response.data.hits);\n      setPage(2);\n      setQuery(query);\n      setLoading(false);\n    });\n  };\n\n  const handleLoadMore = () => {\n    setLoading(true);\n    search(query, page).then((response) => {\n      setImages([...images, ...response.data.hits]);\n      setPage((prev) => prev + 1);\n      setLoading(false);\n      scroll();\n    });\n  };\n\n  const openModal = (imageId) => () => {\n    setShowModal(true);\n    setImageId(imageId);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setImageId(null);\n  };\n\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const image = images.find((image) => image.id === imageId);\n  return (\n    <div className=\"App\">\n      {showModal && <Modal onClose={closeModal} image={image}></Modal>}\n      <header className=\"App-header\">\n        <h1>Image finder</h1>\n      </header>\n      <ToastContainer autoClose={3000} />\n\n      <Searchbar search={handleQChange} />\n      <ImageGallery images={images} onClick={openModal} />\n      {loading === true && (\n        <div className=\"loader\">\n          <Loader\n            className=\"Button-container\"\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        </div>\n      )}\n      {images.length !== 0 && (\n        <div className=\"Button-container\">\n          <LoadMoreButton handleLoadMore={handleLoadMore} disabled={loading} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}